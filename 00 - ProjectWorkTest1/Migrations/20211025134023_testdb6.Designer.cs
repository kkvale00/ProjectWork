// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _00___ProjectWorkTest1.Data;

namespace _00___ProjectWorkTest1.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20211025134023_testdb6")]
    partial class testdb6
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("_00___ProjectWorkTest1.Models.Colore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Colori");
                });

            modelBuilder.Entity("_00___ProjectWorkTest1.Models.Prodotto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .HasColumnType("longtext");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<double>("Prezzo")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Prodotti");
                });

            modelBuilder.Entity("_00___ProjectWorkTest1.Models.Quantita", b =>
                {
                    b.Property<int>("ProdottoId")
                        .HasColumnType("int");

                    b.Property<int>("TagliaId")
                        .HasColumnType("int");

                    b.Property<int>("ColoreId")
                        .HasColumnType("int");

                    b.Property<int>("Quantitativo")
                        .HasColumnType("int");

                    b.HasKey("ProdottoId", "TagliaId", "ColoreId");

                    b.HasIndex("ColoreId");

                    b.HasIndex("TagliaId");

                    b.ToTable("Quantitas");
                });

            modelBuilder.Entity("_00___ProjectWorkTest1.Models.Taglia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Taglie");
                });

            modelBuilder.Entity("_00___ProjectWorkTest1.Models.Quantita", b =>
                {
                    b.HasOne("_00___ProjectWorkTest1.Models.Colore", "Colori")
                        .WithMany()
                        .HasForeignKey("ColoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_00___ProjectWorkTest1.Models.Prodotto", "Prodotti")
                        .WithMany()
                        .HasForeignKey("ProdottoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_00___ProjectWorkTest1.Models.Taglia", "Taglie")
                        .WithMany()
                        .HasForeignKey("TagliaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colori");

                    b.Navigation("Prodotti");

                    b.Navigation("Taglie");
                });
#pragma warning restore 612, 618
        }
    }
}
